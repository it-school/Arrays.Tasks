using System;

namespace Arrays.Tasks
{
	/// <summary>
	/// Задания для работы в аудитории на тему "Многомерные массивы"
	/// </summary>
	class Program
	{
		/// <summary>
		/// Найти наибольший и наименьший элементы двумерного массива вещественных чисел В[m, n].
		/// </summary>
		public static void Task1()
		{
			const int M = 5, N = 6;
			double[,] array = new double[M, N];
			Random random = new Random();

			Console.WriteLine("---------------------------------------\nЗадание 1:\n");
			Console.WriteLine("Исходный массив: ");
			// Заполнение массива случайными значениями
			for (int row = 0; row < M; row++)  // перебираем строки
			{
				for (int column = 0; column < N; column++) // перебираем столбцы в строке
				{
					array[row, column] = random.Next(100); // присваиваем очередному элементу массива случайное значение в интервале [0..100)
					Console.Write(array[row, column] + "\t");
				}
				Console.WriteLine();
			}

			// поиск минимального и максимального значения в массиве
			double min, max = min = array[0, 0];// объявление и инициализация стартовых значений для минимума и максимума
			for (int row = 0; row < M; row++)   // перебираем строки
			{
				for (int column = 0; column < N; column++) // перебираем столбцы в строке
				{
					if (array[row, column] < min) // если текущий элемент меньше, чем тот, который считали минимальным до этого,
						min = array[row, column];  // то запоминаем новое значение минимума
					if (array[row, column] > max) // если текущий элемент меньше, чем тот, который считали минимальным до этого,
						max = array[row, column];  // то запоминаем новое значение минимума
				}
			}

			Console.WriteLine($"\nМинимальный элемент массива:\t{min}");
			Console.WriteLine($"Максимальный элемент массива:\t{max}\n");
		}

		/// <summary>
		/// Найти сумму элементов Двумерного массива вещественных чисел C[15, 15], расположенных на главной диагонали.
		/// Элементы главной диагонали – это элементы у которых индекс столбца и строки совпадает, например matrix[1][1] – второй элемент главной диагонали матрицы)
		/// </summary>
		public static void Task2()
		{
			const int N = 15;
			double[,] С = new double[N, N];
			double sumDiag = 0;
			Random random = new Random();

			Console.WriteLine("---------------------------------------\nЗадание 2:\n");
			Console.WriteLine("Исходный массив: ");
			// Заполнение массива случайными значениями
			for (int row = 0; row < N; row++)  // перебираем строки
			{
				for (int column = 0; column < N; column++) // перебираем столбцы в строке
				{
					С[row, column] = random.Next(1000) / 10.0;      // присваиваем очередному элементу массива случайное значение в интервале [0..100)
					Console.Write("{0,5:f1} ", С[row, column]);  // форматированный вывод чисел по 5 символов на число с 1 цифрой после запятой
					if (row == column)
						sumDiag += С[row, column];
				}
				Console.WriteLine();
			}

			Console.WriteLine($"\nСумма элементов, расположенных на главной диагонали: {sumDiag}\n");
		}

		/// <summary>
		/// Найти номер строки и столбца Двумерного массива для максимального элемента этого массива. Аналогично для минимального.
		/// </summary>
		public static void Task3()
		{
			const int M = 5, N = 6;
			double[,] array = new double[M, N];
			Random random = new Random();

			Console.WriteLine("---------------------------------------\nЗадание 3:\n");
			Console.WriteLine("Исходный массив: ");
			// Заполнение массива случайными значениями
			for (int row = 0; row < M; row++)  // перебираем строки
			{
				for (int column = 0; column < N; column++) // перебираем столбцы в строке
				{
					array[row, column] = random.Next(100); // присваиваем очередному элементу массива случайное значение в интервале [0..100)
					Console.Write(array[row, column] + "\t");
				}
				Console.WriteLine();
			}

			// поиск минимального и максимального значения в массиве
			int minRow, maxRow = minRow = 0;   // объявление и инициализация стартовых значений для номера строки  минимума и максимума
			int minColumn, maxColumn = minColumn = 0; // объявление и инициализация стартовых значений для номера столбца минимума и максимума
			for (int row = 0; row < array.GetLength(0); row++)   // перебираем строки
			{
				for (int column = 0; column < array.GetLength(1); column++) // перебираем столбцы в строке
				{
					if (array[row, column] < array[minRow, minColumn]) // если текущий элемент меньше, чем тот, который считали минимальным до этого,
					{
						minRow = row;        // то запоминаем номер строки нового минимального элемента
						minColumn = column;  // и запоминаем номер столбца нового минимального элемента
					}

					if (array[row, column] > array[maxRow, maxColumn]) // если текущий элемент меньше, чем тот, который считали максимальным до этого,
					{
						maxRow = row;        // то запоминаем номер строки нового максимального элемента
						maxColumn = column;  // и запоминаем номер столбца нового максимального элемента
					}
				}
			}

			Console.WriteLine($"\nПозиция минимального элемента массива:\t[{minRow}, {minColumn}], значение: {array[minRow, minColumn]}");
			Console.WriteLine($"Позиция максимального элемента массива:\t[{maxRow}, {maxColumn}], значение: {array[maxRow, maxColumn]}");
		}

		/// <summary>
		/// Задан Двумерный массив вещественных чисел. Найти:
		/// а) максимальную сумму абсолютных значений элементов по строкам и номер строки с такой суммой;
		/// б) максимальную сумму абсолютных значений элементов по столбцам и номер столбца с такой суммой.
		/// </summary>
		public static void Task4()
		{


		}

		/// <summary>
		/// Дан Двумерный массив. Определить:
		/// а) количество максимальных элементов в массиве;
		/// б) количество минимальных элементов в массиве.
		/// </summary>
		public static void Task5()
		{


		}

		/// <summary>
		/// Дан Двумерный массив целых чисел. В каждом его столбце найти:
		/// а) сумму нечетных элементов;
		/// б) количество положительных элементов;
		/// в) количество элементов, кратных а или b.
		/// </summary>
		public static void Task6()
		{


		}

		/// <summary>
		/// Дан Двумерный массив из четного числа строк. Поменять местами первую строку со второй, третью — с четвертой и т.д.
		/// </summary>
		public static void Task7()
		{


		}

		static void Main(string[] args)
		{
			Task1();
			Task2();
			Task3();
			Task4();
			Task5();
			Task6();
			Task7();
		}
	}
}
